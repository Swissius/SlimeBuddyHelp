{"id":"scenes/Game.js","dependencies":[{"name":"/home/swiss/game/package.json","includedInParent":true,"mtime":1631369390876}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Game = /*#__PURE__*/function (_Phaser$Scene) {\n  _inherits(Game, _Phaser$Scene);\n\n  var _super = _createSuper(Game);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _super.call(this, \"game\");\n  }\n\n  _createClass(Game, [{\n    key: \"preload\",\n    value: function preload() {\n      this.load.image(\"slimeIdle\", \"./slimeIdle-Sheet-sheet.png\");\n    }\n  }, {\n    key: \"create\",\n    value: function create() {\n      var _this$scale = this.scale,\n          width = _this$scale.width,\n          height = _this$scale.height;\n      this.add.sprite(width * 0.5, height * 0.5, \"slimeIdle\", 1); // //create an object in our scene that is a circle (ball)\n      // const ball = this.add.circle(400, 250, 10, 0xffffff);\n      // //this looks at the physics of the scene and adds them to the object you put in the ()\n      // this.physics.add.existing(ball);\n      // //this makes it so that it will collide with the world borders (boolean, x-axis, y-axis)\n      // ball.body.setCollideWorldBounds(true, 1, 1);\n      // ball.body.setBounce(1, 1);\n      // ball.body.setVelocity(200, 200);\n      // this.paddleLeft = this.add.rectangle(50, 250, 10, 125, 0xffffff);\n      // this.physics.add.existing(this.paddleLeft, true);\n      // this.physics.add.collider(this.paddleLeft, ball);\n      // this.cursors = this.input.keyboard.createCursorKeys();\n      // this.paddleRight = this.add.rectangle(750, 250, 10, 125, 0xffffff);\n      // this.physics.add.existing(this.paddleRight, true);\n      // this.physics.add.collider(this.paddleRight, ball);\n    }\n  }]);\n\n  return Game;\n}(Phaser.Scene);\n\nexports.default = Game;"},"sourceMaps":{"js":{"mappings":[{"name":"Game","generated":{"line":30,"column":4},"source":"scenes/Game.js","original":{"line":1,"column":21}},{"generated":{"line":35,"column":0},"source":"scenes/Game.js","original":{"line":2,"column":2}},{"generated":{"line":35,"column":18},"source":"scenes/Game.js","original":{"line":2,"column":16}},{"generated":{"line":36,"column":0},"source":"scenes/Game.js","original":{"line":2,"column":16}},{"generated":{"line":38,"column":0},"source":"scenes/Game.js","original":{"line":2,"column":16}},{"generated":{"line":38,"column":29},"source":"scenes/Game.js","original":{"line":3,"column":10}},{"generated":{"line":38,"column":35},"source":"scenes/Game.js","original":{"line":2,"column":16}},{"generated":{"line":39,"column":0},"source":"scenes/Game.js","original":{"line":4,"column":3}},{"generated":{"line":43,"column":11},"source":"scenes/Game.js","original":{"line":6,"column":2}},{"generated":{"line":43,"column":30},"source":"scenes/Game.js","original":{"line":6,"column":12}},{"generated":{"line":44,"column":0},"source":"scenes/Game.js","original":{"line":7,"column":4}},{"name":"load","generated":{"line":44,"column":11},"source":"scenes/Game.js","original":{"line":7,"column":9}},{"generated":{"line":44,"column":15},"source":"scenes/Game.js","original":{"line":7,"column":4}},{"name":"image","generated":{"line":44,"column":16},"source":"scenes/Game.js","original":{"line":7,"column":14}},{"generated":{"line":44,"column":21},"source":"scenes/Game.js","original":{"line":7,"column":4}},{"generated":{"line":44,"column":22},"source":"scenes/Game.js","original":{"line":7,"column":20}},{"generated":{"line":44,"column":33},"source":"scenes/Game.js","original":{"line":7,"column":4}},{"generated":{"line":44,"column":35},"source":"scenes/Game.js","original":{"line":7,"column":33}},{"generated":{"line":44,"column":64},"source":"scenes/Game.js","original":{"line":7,"column":4}},{"generated":{"line":45,"column":0},"source":"scenes/Game.js","original":{"line":8,"column":3}},{"generated":{"line":48,"column":11},"source":"scenes/Game.js","original":{"line":10,"column":2}},{"generated":{"line":48,"column":29},"source":"scenes/Game.js","original":{"line":10,"column":11}},{"generated":{"line":49,"column":0},"source":"scenes/Game.js","original":{"line":11,"column":4}},{"generated":{"line":49,"column":24},"source":"scenes/Game.js","original":{"line":11,"column":30}},{"name":"scale","generated":{"line":49,"column":29},"source":"scenes/Game.js","original":{"line":11,"column":35}},{"generated":{"line":49,"column":34},"source":"scenes/Game.js","original":{"line":11,"column":4}},{"generated":{"line":50,"column":0},"source":"scenes/Game.js","original":{"line":11,"column":4}},{"name":"width","generated":{"line":50,"column":10},"source":"scenes/Game.js","original":{"line":11,"column":12}},{"generated":{"line":50,"column":15},"source":"scenes/Game.js","original":{"line":11,"column":4}},{"name":"width","generated":{"line":50,"column":30},"source":"scenes/Game.js","original":{"line":11,"column":12}},{"generated":{"line":50,"column":35},"source":"scenes/Game.js","original":{"line":11,"column":4}},{"generated":{"line":51,"column":0},"source":"scenes/Game.js","original":{"line":11,"column":4}},{"name":"height","generated":{"line":51,"column":10},"source":"scenes/Game.js","original":{"line":11,"column":19}},{"generated":{"line":51,"column":16},"source":"scenes/Game.js","original":{"line":11,"column":4}},{"name":"height","generated":{"line":51,"column":31},"source":"scenes/Game.js","original":{"line":11,"column":19}},{"generated":{"line":51,"column":37},"source":"scenes/Game.js","original":{"line":11,"column":4}},{"generated":{"line":52,"column":0},"source":"scenes/Game.js","original":{"line":12,"column":4}},{"name":"add","generated":{"line":52,"column":11},"source":"scenes/Game.js","original":{"line":12,"column":9}},{"generated":{"line":52,"column":14},"source":"scenes/Game.js","original":{"line":12,"column":4}},{"name":"sprite","generated":{"line":52,"column":15},"source":"scenes/Game.js","original":{"line":12,"column":13}},{"generated":{"line":52,"column":21},"source":"scenes/Game.js","original":{"line":12,"column":4}},{"name":"width","generated":{"line":52,"column":22},"source":"scenes/Game.js","original":{"line":12,"column":20}},{"generated":{"line":52,"column":27},"source":"scenes/Game.js","original":{"line":12,"column":25}},{"generated":{"line":52,"column":30},"source":"scenes/Game.js","original":{"line":12,"column":28}},{"generated":{"line":52,"column":33},"source":"scenes/Game.js","original":{"line":12,"column":4}},{"name":"height","generated":{"line":52,"column":35},"source":"scenes/Game.js","original":{"line":12,"column":33}},{"generated":{"line":52,"column":41},"source":"scenes/Game.js","original":{"line":12,"column":39}},{"generated":{"line":52,"column":44},"source":"scenes/Game.js","original":{"line":12,"column":42}},{"generated":{"line":52,"column":47},"source":"scenes/Game.js","original":{"line":12,"column":4}},{"generated":{"line":52,"column":49},"source":"scenes/Game.js","original":{"line":12,"column":47}},{"generated":{"line":52,"column":60},"source":"scenes/Game.js","original":{"line":12,"column":4}},{"generated":{"line":52,"column":62},"source":"scenes/Game.js","original":{"line":12,"column":60}},{"generated":{"line":52,"column":63},"source":"scenes/Game.js","original":{"line":12,"column":4}},{"generated":{"line":52,"column":65},"source":"scenes/Game.js","original":{"line":10,"column":11}},{"generated":{"line":52,"column":66},"source":"scenes/Game.js","original":{"line":14,"column":4}},{"generated":{"line":53,"column":0},"source":"scenes/Game.js","original":{"line":15,"column":4}},{"generated":{"line":54,"column":0},"source":"scenes/Game.js","original":{"line":16,"column":4}},{"generated":{"line":55,"column":0},"source":"scenes/Game.js","original":{"line":17,"column":4}},{"generated":{"line":56,"column":0},"source":"scenes/Game.js","original":{"line":18,"column":4}},{"generated":{"line":57,"column":0},"source":"scenes/Game.js","original":{"line":19,"column":4}},{"generated":{"line":58,"column":0},"source":"scenes/Game.js","original":{"line":20,"column":4}},{"generated":{"line":59,"column":0},"source":"scenes/Game.js","original":{"line":21,"column":4}},{"generated":{"line":60,"column":0},"source":"scenes/Game.js","original":{"line":22,"column":4}},{"generated":{"line":61,"column":0},"source":"scenes/Game.js","original":{"line":23,"column":4}},{"generated":{"line":62,"column":0},"source":"scenes/Game.js","original":{"line":24,"column":4}},{"generated":{"line":63,"column":0},"source":"scenes/Game.js","original":{"line":25,"column":4}},{"generated":{"line":64,"column":0},"source":"scenes/Game.js","original":{"line":26,"column":4}},{"generated":{"line":65,"column":0},"source":"scenes/Game.js","original":{"line":27,"column":4}},{"generated":{"line":66,"column":0},"source":"scenes/Game.js","original":{"line":28,"column":4}},{"generated":{"line":67,"column":0},"source":"scenes/Game.js","original":{"line":29,"column":3}},{"name":"Phaser","generated":{"line":71,"column":2},"source":"scenes/Game.js","original":{"line":1,"column":34}},{"generated":{"line":71,"column":8},"source":"scenes/Game.js","original":{"line":1,"column":40}},{"name":"Scene","generated":{"line":71,"column":9},"source":"scenes/Game.js","original":{"line":1,"column":41}}],"sources":{"scenes/Game.js":"export default class Game extends Phaser.Scene {\n  constructor() {\n    super(\"game\");\n  }\n\n  preload() {\n    this.load.image(\"slimeIdle\", \"./slimeIdle-Sheet-sheet.png\");\n  }\n\n  create() {\n    const { width, height } = this.scale;\n    this.add.sprite(width * 0.5, height * 0.5, \"slimeIdle\", 1);\n\n    // //create an object in our scene that is a circle (ball)\n    // const ball = this.add.circle(400, 250, 10, 0xffffff);\n    // //this looks at the physics of the scene and adds them to the object you put in the ()\n    // this.physics.add.existing(ball);\n    // //this makes it so that it will collide with the world borders (boolean, x-axis, y-axis)\n    // ball.body.setCollideWorldBounds(true, 1, 1);\n    // ball.body.setBounce(1, 1);\n    // ball.body.setVelocity(200, 200);\n    // this.paddleLeft = this.add.rectangle(50, 250, 10, 125, 0xffffff);\n    // this.physics.add.existing(this.paddleLeft, true);\n    // this.physics.add.collider(this.paddleLeft, ball);\n    // this.cursors = this.input.keyboard.createCursorKeys();\n    // this.paddleRight = this.add.rectangle(750, 250, 10, 125, 0xffffff);\n    // this.physics.add.existing(this.paddleRight, true);\n    // this.physics.add.collider(this.paddleRight, ball);\n  }\n}\n"},"lineCount":null}},"error":null,"hash":"826ed48dbea0ef5dabb3d69f7594bfeb","cacheData":{"env":{}}}